{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handelSortedByAlphabetically","setState","ALPHABET","handelSortedByLength","LENGTH","handelReverse","handelReset","this","sortedGoods","goods","visibleGoods","sort","a","b","length","reverse","console","log","getReorderedGoods","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KA6CN,IAAME,EAAG,iKA6BZ,OA7BY,oCACdC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MACnB,EAEFC,6BAA+B,WAC7B,EAAKC,SAAS,CACZH,SAAUL,EAASS,YAErB,EAEFC,qBAAuB,WACrB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAErB,EAEFC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAErB,EAEFS,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAEtB,EAmEA,OAnEA,mCAED,WACE,MAAiCQ,KAAKX,MAA9BC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SACdU,EAnEH,SACLC,EAAgB,GAEf,IADCX,EAAQ,EAARA,SAAUD,EAAU,EAAVA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,SACZQ,EAAaC,OACb,MAEF,KAAKlB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,OAASD,EAAEC,UAO7C,OAAIjB,EACKa,EAAaK,WAItBC,QAAQC,IAAInB,EAAUD,GAEfa,GAyCeQ,CAAkBxB,EAAiBa,KAAKX,OAE5D,OACE,sBAAKuB,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,0BACA,CAAE,WAAYvB,IAAaL,EAASS,WAEtCoB,QAASf,KAAKP,6BAA6B,SAC5C,wBAID,wBACEoB,KAAK,SACLD,UAAWE,IACT,6BACA,CAAE,WAAYvB,IAAaL,EAASW,SAEtCkB,QAASf,KAAKJ,qBAAqB,SACpC,mBAID,wBACEiB,KAAK,SACLD,UAAWE,IACT,6BACA,CAAE,YAAaxB,IAEjByB,QAASf,KAAKF,cAAc,SAC7B,YAICR,GAAcC,IAAaL,EAASM,KAElC,wBACEqB,KAAK,SACLD,UAAU,qCACVG,QAASf,KAAKD,YAAY,SAC3B,UAID,QAIN,6BACE,6BACGE,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAM,SACfA,GADqBA,iBAQnC,EAhGa,CAASC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.1ab8c3e9.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handelSortedByAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handelSortedByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handelReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handelReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info is-large',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.handelSortedByAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success is-large',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handelSortedByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning is-large',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handelReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-large is-light\"\n                onClick={this.handelReset}\n              >\n                Reset\n              </button>\n            )\n            : null}\n\n        </div>\n\n        <ul>\n          <ul>\n            {sortedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}